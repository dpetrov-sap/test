name: Go CI/CD pipeline

on: 
  pull_request:
    branches:
      - main 

jobs:
  build-test-sonarqube:
    runs-on: ubuntu-latest

    

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v4
    

      # Step 2: Set up Go
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      # Step 3: Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: go mod tidy

      # Step 5: Lint
      - name: Run Go Linter
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest

    unit_tests:
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v3
      - name: Run unit tests and generate unit coverage report
        run: |
          mkdir -p test-results
          go test -coverprofile=unit.coverage.out -run='^Test(?!Integration)' ./...

    integration_tests:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Run integration tests and generate integration coverage report

          run: |
             mkdir -p test-results
             go test -coverprofile=integration.coverage.out -run='^TestIntegration' ./...
          
        - name: Set up SonarCloud
          uses: SonarSource/sonarqube-scan-action@v4
        


          env: 
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

       

 
       # Step 9: Build Docker image
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.actor }}/go-hello-world:${{ github.sha }} .

      # Step 10: Login to GHCR
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # Step 11: Push Docker image
      - name: Push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/go-hello-world:${{ github.sha }}
